name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: List directory structure
        run: |
          pwd
          ls -R

      - name: Set execute permission for mvnw
        run: |
          chmod +x ./consumer/mvnw
          chmod +x ./producer/mvnw

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven
        run: |
          wget https://downloads.apache.org/maven/maven-3/3.9.9/binaries/apache-maven-3.9.9-bin.zip
          unzip apache-maven-3.9.9-bin.zip
          sudo mv apache-maven-3.9.9 /opt/maven
          echo "M2_HOME=/opt/maven" | sudo tee -a /etc/environment
          echo "PATH=${M2_HOME}/bin:${PATH}" | sudo tee -a /etc/environment
          source /etc/environment

      - name: Build and package consumer app
        working-directory: ./consumer
        run: |
          mvn clean package -DskipTests

      - name: Build Docker image for consumer app
        run: |
          docker build -t docker.io/pravesh77/consumer-app:latest ./consumer
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login docker.io -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push docker.io/pravesh77/consumer-app:latest

      - name: Build and package producer app
        working-directory: ./producer
        run: |
          mvn clean package -DskipTests

      - name: Build Docker image for producer app
        run: |
          docker build -t docker.io/pravesh77/producer-app:latest ./producer
          echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login docker.io -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
          docker push docker.io/pravesh77/producer-app:latest

      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Setup kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Debug kubeconfig
        run: |
          kubectl config view --raw
          kubectl get nodes || echo "No nodes available or kubeconfig is incorrect."

      - name: Deploy consumer app to Kubernetes
        run: |
          helm upgrade --install consumer-app ./helm/consumer-chart --namespace my-namespace --create-namespace

      - name: Deploy producer app to Kubernetes
        run: |
          helm upgrade --install producer-app ./helm/producer-chart --namespace my-namespace --create-namespace

      - name: Deploy Kafka to Kubernetes
        run: |
          helm upgrade --install kafka ./helm/kafka-chart --namespace my-namespace --create-namespace

      - name: Deploy Zookeeper to Kubernetes
        run: |
          helm upgrade --install zookeeper ./helm/zookeeper-chart --namespace my-namespace --create-namespace
